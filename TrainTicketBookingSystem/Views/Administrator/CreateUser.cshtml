@model ExtendingIdentity.Models.CreateUserViewModel
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.Title = "Create a new user";
}

@if (!String.IsNullOrEmpty(ViewBag.UserCreatedSuccessfullyMessage))
{
    <div class="alert alert-dismissible alert-success">
        <button type="button" class="close" data-dismiss="alert">×</button>
        <p>@ViewBag.UserCreatedSuccessfullyMessage</p>
    </div>
}

<h2 class="page-header">Create a new user account.</h2>

@using (Html.BeginForm("CreateUser", "Administrator", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="form-group username">
        @Html.LabelFor(m => m.UserName, new { @class = "col-md-2" })
        @Html.TextBoxFor(m => m.UserName, new { @class = "form-control col-md-10" })
        @Html.ValidationMessageFor(m => m.UserName, "", new { @class = "text-danger" })
    </div>
    <div class="form-group email">
        @Html.LabelFor(m => m.Email, new { @class = "col-md-2" })
        @Html.TextBoxFor(m => m.Email, new { @class = "form-control col-md-10" })
        @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
    </div>
    <div class="form-group confirm-email">
        @Html.LabelFor(m => m.ConfirmEmail, new { @class = "col-md-2" })
        @Html.TextBoxFor(m => m.ConfirmEmail, new { @class = "form-control col-md-10" })
        @Html.ValidationMessageFor(m => m.ConfirmEmail, "", new { @class = "text-danger" })
    </div>
    <div class="form-group first-name">
        @Html.LabelFor(m => m.FirstName, new { @class = "col-md-2" })
        @Html.TextBoxFor(m => m.FirstName, new { @class = "form-control col-md-10" })
        @Html.ValidationMessageFor(m => m.FirstName, "", new { @class = "text-danger" })
    </div>
    <div class="form-group last-name">
        @Html.LabelFor(m => m.LastName, new { @class = "col-md-2" })
        @Html.TextBoxFor(m => m.LastName, new { @class = "form-control col-md-10" })
        @Html.ValidationMessageFor(m => m.UserName, "", new { @class = "text-danger" })
    </div>
    <div class="form-group role">
        @Html.LabelFor(m => m.SelectedRole, new { @class = "col-md-2" })
        @Html.DropDownListFor(m => m.SelectedRole, new SelectList(Model.RolesOptions, "Text", "Value", Model.SelectedRole),
                                "Select a role", new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.SelectedRole, "", new { @class = "text-danger" })
    </div>

    <div class="form-group submit">
        <input type="submit" value="Create user" class="col-md-offset-2 col-md-10 btn btn-primary btn-lg" />
    </div>
}